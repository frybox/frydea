from types import SimpleNamespace
from datetime import datetime
from fryhcs import Element
from fryui import HCenter, Icon, Button

def App(cards=None):
  <template>
    <div h-screen w-screen overflow-x-auto>
      <Header />
      <Body {cards}/>
    </div>
  </template>

def Header():
  <template>
    <div fixed top-0 w-full h-30px z-100 bg-primary>
    </div>
  </template>
  <script>
  </script>

def Body(cards=None):
  <template>
    <div flex mt-30px h-sub,100%,30px w-full>
      <SideBar/>
      <Main {cards}/>
    </div>
  </template>
  <script>
  </script>

def SideBar():
  <template>
    <div box-border h-full w-30px bg-secondary>
    </div>
  </template>
  <script>
  </script>

def Main(cards=None):
  left = <Index />
  right = <Preview />
  <template>
    <div box-border w-sub,100%,30px mx-auto h-full bg-gray-bg>
      <HCenter {left} {right}>
        <Content {cards} width="3fr" />
      </HCenter>
    </div>
  </template>
  <script>
  </script>

def Index():
  <template>
    <div bg-secondary-bga>
    </div>
  </template>

def Preview():
  <template>
    <div box-border h-full bg-secondary-bgx overflow-auto>
    </div>
  </template>
  <script>
  </script>

def Content(cards=None):
  cards = cards if cards else []
  empty_card = SimpleNamespace(
    number='',
    name='新建卡片',
    update_time=datetime.now(),
    html='<h1>Hello world</h1>',
  )
  <template>
    <div bg-primary-elx box-border h-full overflow-auto>
      {<Card {card} />
       for card in cards}
      <div w-full text-center mt-30px>
        <div ref=(newcard) hidden min-h-150px>
          <Card card={empty_card} />
        </div>
        <Button ref=(addButton) wide info>
          <Icon type="plus" class="h-8 w-8"/>
        </Button>
      </div>
    </div>
  </template>
  <script>
    import { effect } from "fryhcs";
    effect(() => {
      if (addButton.clicked.value) {
        console.log("create a new card");
        newcard.removeAttribute('hidden');
      }
    });
  </script>

def Card(card):
  <template>
    <div w-full mb-20px border border-gray-elx rounded relative>
      <div flex justify-between w-full h-30px bg-secondary>
        <div flex>
          <Icon type="file-text"/>
          <p>{card.number}</p>
        </div>
        <p>{card.name}</p>
        <p>{card.update_time}</p>
      </div>
      <div w-full bg-secondary-bg>
        {card.html}
      </div>
      <div w-full h-30px bg-secondary>
      </div>
    </div>
  </template>


# def Body():
#   <template>
#     <div flex mt-30px h-sub,100%,30px w-full>
#       <SideBar/>
#       <Main ref=(editor) />
#       <Preview ref=(preview) />
#     </div>
#   </template>
#   <script>
#     import { marked } from "marked";
#     import { effect } from "fryhcs";
#     effect(function() {
#       const htmlContent = marked(editor.markdownText.value);
#       preview.innerHTML = htmlContent;
#     });
#   </script>
# 
# def SideBar():
#   <template>
#     <div box-border h-full bg-yello-200>
#     </div>
#   </template>
#   <script>
#   </script>
# 
# def Main():
#   <template>
#     <div ref=(editor) w-3/5 mx-auto h-full box-border bg-lime-50>
#     </div>
#   </template>
#   <script>
#     import { EditorState } from "@codemirror/state";
#     import { EditorView, basicSetup } from "codemirror";
#     import { markdown } from "@codemirror/lang-markdown";
#     import { vim } from "@replit/codemirror-vim";
#     import { signal } from "fryhcs";
# 
#     let markdownText = signal('');
#     const autoRenderer = EditorView.updateListener.of((update) => {
#         if (update.changes) {
#             markdownText.value = view.state.doc.toString();
#         }
#     });
#     const state = EditorState.create({
#       doc: "1\n2\n3\n4\n5\n6\n7\n8\n9\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n0",
#       extensions: [
#         vim(),
#         basicSetup,
#         markdown(),
#         autoRenderer,
#       ]
#     })
#     const view = new EditorView({
#       state,
#       parent: editor
#     });
#     view.focus();
#     export default { markdownText };
#   </script>
# 
# def Preview():
#   <template>
#     <div ref=(preview) box-border h-full bg-slate-100>
#     </div>
#   </template>
#   <script>
#     export default preview;
#   </script>