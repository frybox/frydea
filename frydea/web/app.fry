from datetime import datetime
from flask import url_for
from fryhcs import Element
from fryui import HCenter, CenteredLayoutIcon, ViewVerticalIcon
from frydea.models import Card as CardModel
from frydea.web.preview import Preview
from frydea.web.edit import Edit
from frydea.web.index import Index

def App(user, cards=None, cidtimes=None, clid=0):
  cards = [] if not cards else cards
  cidtimes = [] if not cidtimes else cidtimes
  clid = clid if clid else 0
  items = []
  cids = [cid for cid, _create_time in cidtimes]
  for card in cards:
    i = cids.index(card.id)
    if i > 0:
      items.append(dict(min_cid=cids[0], max_cid=cids[i-1], count=i))
    items.append(card)
    cids = cids[i+1:]
  if cids:
    items.append(dict(min_cid=cids[0], max_cid=cids[-1], count=len(cids)))

  cid2timeList = [(cid, time.isoformat()) for cid, time in cidtimes]

  <template>
    <div h-screen w-screen overflow-x-auto>
      <Header {user}/>
      <Body {cidtimes} {items} />
    </div>
  </template>
  <script {cid2timeList} {clid}>
    import { cardManager } from './frydea.js';
    cardManager.init(cid2timeList, clid);
  </script>


def Header(user):
  <template>
    <div fixed top-0 w-full h-30px z-100 bg-primary
         px-10px
         flex justify-between>
      <div text-primary-contrast text-bold>
        <p>
          飞思卡片笔记
        </p>
      </div>
      <div flex gap-3 m-5px text-sm items-center text-primary-contrast>
        <div>
          <span ref=(centeredIcon) @click=(toUncentered) cursor-pointer>
            <CenteredLayoutIcon scale={1}/>
          </span>
          <span hidden ref=(uncenteredIcon) @click=(toCentered) cursor-pointer>
            <ViewVerticalIcon scale={1}/>
          </span>
        </div>
        <p>
          {user.nickname}
        </p>
        <a href={url_for('logout')}>
          退出
        </a>
      </div>
    </div>
  </template>
  <script>
    const toUncentered = () => {
      if (this.isReady) {
        if (this.g.mainArea.isCentered()) {
          this.g.mainArea.setCentered(false);
          centeredIcon.setAttribute('hidden', '');
          uncenteredIcon.removeAttribute('hidden');
        }
      }
    };
    const toCentered = () => {
      if (this.isReady) {
        if (!this.g.mainArea.isCentered()) {
          this.g.mainArea.setCentered(true);
          centeredIcon.removeAttribute('hidden');
          uncenteredIcon.setAttribute('hidden', '');
        }
      }
    };
  </script>


def Body(cidtimes, items):
  <template>
    <div flex mt-30px h-sub,100%,30px w-full>
      <LeftSideBar/>
      <Main {cidtimes} {items} />
      <RightSideBar/>
    </div>
  </template>
  <script>
  </script>

def LeftSideBar():
  <template>
    <div box-border h-full w-30px bg-secondary>
    </div>
  </template>
  <script>
  </script>

def RightSideBar():
  <template>
    <div box-border h-full w-30px bg-secondary>
    </div>
  </template>
  <script>
  </script>

def Main(cidtimes, items):
  left = <Index ref=(indexArea) {cidtimes} />
  right = <Preview ref=(previewArea) />
  <template>
    <div box-border w-sub,100%,60px mx-auto h-full bg-gray-bg>
      <HCenter {left} {right} ref=(mainArea)>
        <Edit ref=(editArea) {items} width="3fr" />
      </HCenter>
    </div>
  </template>
  <script>
    import { cardManager } from "./frydea.js";

    Object.assign(this.g, {indexArea, previewArea, editArea, mainArea});
    cardManager.indexArea = indexArea;
    cardManager.editArea = editArea;
    cardManager.previewArea = previewArea;
  </script>
